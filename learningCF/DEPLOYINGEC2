AWSTemplateFormatVersion: '2010-09-09'
Description: Creates EC2 Instances with security group and VPC
Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
    Description: "Select an instance type."
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SourceLocation:
    Description: >-
      The CIDR IP address range that can be used to SSH to the EC2 instances and
      access the servers via http
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form 0.0.0.0/0
Mappings:
  Subnet1Config:
    VPC1:
      CIDR: 10.0.0.0/16
    Public1:
      CIDR: 10.0.0.0/24
    Public2:
      CIDR: 10.0.1.0/24
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Application
          Value:
            Ref: AWS::StackId
        - Key: Name
          Value: ADA_VPC
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs us-east-1
      MapPublicIpOnLaunch: 'true'
      CidrBlock: !FindInMap 
        - Subnet1Config
        - Public1
        - CIDR
      Tags:
        - Key: Name
          Value: ADA_PUBLIC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: ADA_IGW
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ADA_VPC
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  RouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable
  InstanceSecurityGroup: 
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: EC2SecurityGroupPublic
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
      GroupName: ADA_SG
      Tags:
        - Key: Name
          Value: ADA_SG
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    DependsOn: AttachGateway
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      ImageId: 'ami-0b0dcb5067f052a63'
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash
            'echo ''cloud_user:%password%'' | chpasswd'
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            echo "<html><h1>Instance Data</h1><h3>Availability Zone: " > /var/www/html/index.html
            curl http://169.254.169.254/latest/meta-data/placement/availability-zone >> /var/www/html/index.html
            echo "</h3><h3>Instance Id: " >> /var/www/html/index.html
            curl http://169.254.169.254/latest/meta-data/instance-id >> /var/www/html/index.html
            echo "</h3><h3>Public IP: " >> /var/www/html/index.html
            curl http://169.254.169.254/latest/meta-data/public-ipv4 >> /var/www/html/index.html
            echo "</h3><h3>Local IP: " >> /var/www/html/index.html
            curl http://169.254.169.254/latest/meta-data/local-ipv4 >> /var/www/html/index.html
            echo "</h3></html> " >> /var/www/html/index.html
            echo 'setup done.' > /home/cloud_user/status
            'chown cloud_user:cloud_user /home/cloud_user/status'
      NetworkInterfaces:
        - GroupSet:
            - !Ref InstanceSecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: MyInstance