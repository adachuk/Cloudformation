AWSTemplateFormatVersion: 2010-09-09
Description: Creates an instance with an autoscaling group, behind an application load balancer. 
Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
    Description: 'Select an instance type.'
  WebServerCount:
    Description: number of instances to launch for the webserver server
    Type: Number
    Default: '1'
  PublicApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref PublicLoadBalancerSecurityGroup
  ALBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: '30'
      HealthCheckTimeoutSeconds: '10'
      HealthyThresholdCount: "3"
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !Ref VPC
  ALBListner:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: 'forward'
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref PublicApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  PublicLoadBalancerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Public ELB with Security Grouup with HTTP access on port 80
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: 0.0.0.0/0
  WebServerFleet:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: PublicRoute
    Properties: 
       VPCZoneIdentifier: 
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
       LaunchConfigurationName: !Ref WebServerLaunchConfig
       MinSize: 1
       MaxSize: 10 
       DesiredCapacity: !Ref WebServerCount
       TargetGroupARNS: 
          - !Ref ALBTargetGroup 
    CreationPolicy: 
       ResourceSignal:
          Timeout: PT45M
          Count: !Ref WebServerCount
    UpdatePolicy: 
       AutoscalingRollingUpdate:
          MinInstanceService: '1'
          MinBatchSize: '1'
          PauseTime: PT15M
          WaitingOnResourcesSignals: 'true'
  ASGScalingPolicyHigh:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref WebServerFleet
      PolicyType: TargetTracking
      AdjustmentType: ChangeInCapacity
      StepAdjustments: 
        - MetricIntervalLowerBound: 0
          ScalingAdjustment: 1
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 2
      Statistic: Average
      Threshold: 90
      AlarmDescription: 'Scale out if CPU > 90% for 2 minutes'
      Period: 60
      AlarmActions:
      - !Ref ASGScalingPolicyHigh
      Namespace: AWS/EC2
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          !Ref WebServerFleet
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization
  WebServerLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      SecurityGroups: !Ref PublicLoadBalancerSecurityGroup
      InstanceType: !Ref InstanceTypeParameter
      UserData: !Base64 |
        #!/bin/bash -x
        yum install -y aws-cfn-bootstrap
      EbsOptimized: true
